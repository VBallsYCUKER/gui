-- Define `getgenv` to allow dynamic webhook URL configuration
getgenv().WebhookUrl = getgenv().WebhookUrl or ""

-- Webhook function to send messages to Discord (Only sends once)
local function SendMessageOnce(url, username, rebirths, stats, playerTime, color)
    if url == "" then
        warn("No Webhook URL specified! Please set getgenv().WebhookUrl before running the script.")
        return false
    end

    local data = {
        ["avatar_url"] = "https://i.imgflip.com/2/59wgng.jpg",
        ["content"] = "",
        ["embeds"] = {
            {
                ["author"] = {
                    ["name"] = username,
                    ["url"] = "https://roblox.com/games/" .. game.PlaceId,
                },
                ["description"] = "Rebirths and Stats",
                ["type"] = "rich",
                ["color"] = color,
                ["fields"] = {
                    {
                        ["name"] = "Rebirths",
                        ["value"] = tostring(rebirths),
                        ["inline"] = true
                    },
                    {
                        ["name"] = "Stats",
                        ["value"] = stats,
                        ["inline"] = true
                    },
                    {
                        ["name"] = "Player Time",
                        ["value"] = playerTime,
                        ["inline"] = true
                    },
                },
                ["thumbnail"] = {["url"] = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. game.Players.LocalPlayer.UserId .. "&width=150&height=150&format=png"},
            }
        }
    }
    local newdata = game:GetService("HttpService"):JSONEncode(data)

    local headers = {
        ["content-type"] = "application/json"
    }
    local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
    local success, response = pcall(function()
        return request(abcdef)
    end)
    if success then
        return true
    else
        warn("Failed to send webhook: " .. tostring(response))
        return false
    end
end

-- Helper function to convert numbers to scientific notation
local function toScientificNotation(num)
    return string.format("%.0e", num)
end

-- Determine the webhook color based on rebirths
local function getWebhookColor(rebirths)
    if rebirths >= 0 and rebirths <= 100 then
        return 0x228B22 -- Forest Green
    elseif rebirths <= 500 then
        return 0x39FF14 -- Neon Green
    elseif rebirths <= 1000 then
        return 0x00FFFF -- Cyan
    elseif rebirths <= 1725 then
        return 0x87CEEB -- Sky Blue
    elseif rebirths <= 3000 then
        return 0xADD8E6 -- Light Blue
    elseif rebirths <= 5000 then
        return 0x00008B -- Dark Blue
    elseif rebirths <= 10000 then
        return 0x5D3FD3 -- Dark Purple
    elseif rebirths <= 15000 then
        return 0x800080 -- Purple
    elseif rebirths <= 20000 then
        return 0x8F00FF -- Violet
    elseif rebirths <= 25000 then
        return 0xE6E6FA -- Lavender
    elseif rebirths <= 30000 then
        return 0xAA336A -- Dark Pink
    elseif rebirths <= 40000 then
        return 0xFFC0CB -- Pink
    elseif rebirths <= 60000 then
        return 0xFFB6C1 -- Light Pink
    else
        return 0xFF69B4 -- Neon Pink
    end
end

local function sendWebhookOnce()
    local player = game.Players.LocalPlayer
    local playerStats = game:GetService("ReplicatedStorage"):FindFirstChild("Datas"):FindFirstChild(tostring(player.UserId))

    if playerStats then
        local rebirths = playerStats:FindFirstChild("Rebirth") and playerStats.Rebirth.Value or 0
        local stats = playerStats:FindFirstChild("Energy") and playerStats.Energy.Value or 0

        -- Convert stats to scientific notation
        local statsInScientificNotation = toScientificNotation(stats)

        -- Determine the webhook color based on rebirths
        local webhookColor = getWebhookColor(rebirths)

        -- Assume the player's UTC offset is stored in their stats or profile
        local utcOffset = playerStats:FindFirstChild("UtcOffset") and playerStats.UtcOffset.Value or 0
        local playerTime = os.date("%Y-%m-%d %H:%M:%S", os.time() + utcOffset * 3600)

        -- Send the message to the webhook
        SendMessageOnce(getgenv().WebhookUrl, player.Name, rebirths, statsInScientificNotation, playerTime, webhookColor)
    end
end

-- Trigger the webhook on script execution
sendWebhookOnce()
